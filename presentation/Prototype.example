abstract class Color implements Cloneable
{
    protected String colorName;
    abstract void addColor();
    public Object clone()
    {
        Object clone = null;
        try
        {
            clone = super.clone();
        } 
        catch (CloneNotSupportedException e) 
        {
            e.printStackTrace();
        }
        return clone;
    }
}
class blueColor extends Color
{
    public blueColor() 
    {
        this.colorName = "blue";
    }
    @Override
    void addColor() 
    {
        System.out.println("Blue color added");
    }
     
}
class ColorStore {
    private static Map<String, Color> colorMap = new HashMap<String, Color>(); 
    static
    {
        colorMap.put("blue", new blueColor());
    }
    public static Color getColor(String colorName)
    {
        return (Color) colorMap.get(colorName).clone();
    }
}
class Prototype
{
    public static void main (String[] args)
    {
        ColorStore.getColor("blue").addColor();
    }
}